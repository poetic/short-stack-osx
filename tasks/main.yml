---
# GlobalDomain type defaults
#
# A lot of these were taken from mitchty @
# https://github.com/mitchty/bootstrap/blob/master/osx-user.yml
# and others from multiple other places on the web.

## Caps Lock Map

- name: get internal usb keyboard vendor/product ids
  shell: >
    ioreg -n IOHIDKeyboard -r |
    grep -E 'VendorID"|ProductID' |
    awk '{print $4}' |
    paste -s -d'-\n' -
  register: kb_id
  changed_when: false

- name: read builtin keyboard map for caps lock setup
  shell: >
    defaults -currentHost read -g
    "{{ kb_key }}.{{ kb_id.stdout }}-0" |
    perl -pe 's/(\n|\s+|{|}|\(|\)|\=|\;)//g' |
    perl -pe 's/HIDKeyboardModifierMapping//g'
  register: current_layout
  failed_when: no
  changed_when: false

- name: ensure builtin keyboard maps caps lock to control
  shell: >
    defaults -currentHost write -g
    "{{ kb_key }}.{{ kb_id.stdout }}-0"
    -array "{HIDKeyboardModifierMappingDst=2;HIDKeyboardModifierMappingSrc=0;}"
  when: current_layout.stdout != "Dst2Src0"

- name: ensure the ruby json gem is present
  gem: name=json state=present

- name: ensure the ruby CFPropertyList gem is present
  gem: name=CFPropertyList state=present

- name: Ensure osx configuration
  osx_write: domain={{ item.domain }} key={{ item.key }} value={{ item.value }}
  with_items:
    - { domain: NSGlobalDomain, key: NSNavPanelExpandedStateForSaveMode, value: true }
    - { domain: NSGlobalDomain, key: NSNavPanelExpandedStateForSaveMode2, value: true }
    - { domain: com.apple.LaunchServices, key: LSQuarantine, value: false }
    - { domain: NSGlobalDomain, key: AppleMiniaturizeOnDoubleClick, value: false }
    - { domain: com.apple.dock, key: autohide, value: true }
    - { domain: com.apple.dock, key: autohide-delay, value: 0 }
    - { domain: com.apple.dock, key: showhidden, value: true }
    - { domain: com.apple.finder, key: QuitMenuItem, value: true }
    - { domain: com.apple.finder, key: DSDontWriteNetworkStores, value: true }
    - { domain: com.apple.finder, key: ShowStatusBar, value: true }
    - { domain: com.apple.NetworkBrowser, key: BrowseAllInterfaces, value: true }
    - { domain: com.apple.finder, key: AppleShowAllExtensions, value: true }
    - { domain: com.apple.finder, key: FXEnableExtensionChangeWarning, value: false }
    - { domain: com.apple.driver.AppleBluetoothMultitouch.trackpad, key: Clicking, value: 1 }
    - { domain: com.apple.driver.AppleBluetoothMultitouch.trackpad, key: TrackpadRightClick, value: true }
    - { domain: NSGlobalDomain, key: ApplePressAndHoldEnabled, value: false }
    - { domain: NSGlobalDomain, key: KeyRepeat, value: 0 }
    - { domain: NSGlobalDomain, key: InitialKeyRepeat, value: 6 }
    - { domain: org.webkit.nightly.WebKit, key: StartPageDisabled, value: true }
    - { domain: com.apple.Safari, key: IncludeDevelopMenu, value: true }
    - { domain: com.apple.Safari, key: WebKitDeveloperExtrasEnabledPreferenceKey, value: true }
    - { domain: com.apple.SoftwareUpdate, key: ScheduleFrequency, value: 1 }
    - { domain: NSGlobalDomain, key: com.apple.sound.beep.feedback, value: 0 }
    - { domain: com.apple.finder, key: ShowExternalHardDrivesOnDesktop, value: true }
    - { domain: com.apple.finder, key: ShowMountedServersOnDesktop, value: true }
    - { domain: com.apple.finder, key: ShowRemovableMediaOnDesktop, value: true }

- name: set up iterm2 default config
  copy: src=com.googlecode.iterm2.plist dest=~/Library/Preferences/com.googlecode.iterm2.plist

- name: add osx configuration to zsh
  copy: src=osx.zsh dest={{ zshrc_d }}
